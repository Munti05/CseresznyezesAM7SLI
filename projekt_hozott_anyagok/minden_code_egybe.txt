################################ JAVASCRIPT ################################

function LoadVinyls() {
    fetch("api/vinyls", {
        method:"GET"
    }).then(response => {
        if (!response.ok) {
            throw new Error("hálózati csatlakozási hiba" + response)
        };
        return response.json();
    }).then(data => {
        FillUpTheTable(data);
    }).catch(error => {
        console.log(error)
    })
}

LoadVinyls();

function FillUpTheTable(rawData) {
    var table = document.getElementById("tableForContent");

    for (var i = 0; i < rawData.length; i++) {
        var row = document.createElement("tr");
        var currentRow = rawData[i];

        for (var j in currentRow) {
            var column = document.createElement("td");
            column.textContent = currentRow[j];

            row.appendChild(column);
        }
        table.appendChild(row)
    }
}

document.getElementById("deleteButton").addEventListener("click", () => {
    let id = parseInt(document.getElementById("deleteVinylId").value)

    if (id < 0 || isNaN(id)) {
        alert("Nem jó ID formátum");
        return;
    }
    fetch(`api/vinyls/${id}`, {
        method: "DELETE"
    }).then(response => {
        if (response.ok) {
            alert("Sikeres törlés");
            LoadVinyls();
        }
        else {
            alert("Sikertelen a törlés, próbáld újra!")
        }
    })
})


################################ USERS API CONTROLLER ################################

namespace WebApplication1.Controllers
{
    [Route("api/users")]
    [ApiController]
    public class UserController : ControllerBase
    {
        // GET: api/<UserController>
        [HttpGet]
        public IActionResult Get()
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Users select i).ToList();
            return Ok(x);
        }

        // GET api/<UserController>/5
        [HttpGet("{id}")]
        public IActionResult Get(int id)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Users
                     where i.UserId == id select i).FirstOrDefault();
            if(x is null)
            {
                return NotFound();
            }
            return Ok(x);
        }

        // POST api/<UserController>
        [HttpPost("createUser/{name}/{email}")]
        public IActionResult CreateUser(string name, string email)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var newUser = new User
            {
                Username= name,
                Email= email
            };
            _context.Users.Add(newUser);
            _context.SaveChanges();
            return Ok(new {Message= "Sikeresen létrehoztál egy felhasználót!"});
        }

        // POST api/<UserController>
        [HttpPost("changeUsername/{id}/{newname}")]
        public IActionResult ChangeUsername(int id, string newName)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var user = (from i in _context.Users where i.UserId == id select i).FirstOrDefault();
            if(user is null)
            {
                return NotFound();
            }
            user.Username = newName;
            _context.SaveChanges();
            return Ok(new { Message = "Sikeresen módosítottad a felhasználó nevét!" });
        }

        // DELETE api/<UserController>/5
        [HttpDelete("{id}")]
        public IActionResult Delete(int id)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Users where i.UserId == id select i).FirstOrDefault();
            if(x is null)
            {
                return NotFound();  
            }
            _context.Users.Remove(x);
            _context.SaveChanges();
            return Ok();
        }
    }
}


################################ VINYLS API CONTROLLER ################################

namespace WebApplication1.Controllers
{
    [Route("api/vinyls")]
    [ApiController]
    public class VinylController : ControllerBase
    {
        // GET: api/<VinylController>
        [HttpGet]
        public IActionResult Get()
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Vinyls select i).ToList();
            return Ok(x);
        }

        // GET api/<VinylController>/5
        [HttpGet("{id}")]
        public IActionResult Get(int id)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Vinyls
                     where i.VinylId == id
                     select i).FirstOrDefault();
            if (x is null)
            {
                return NotFound();
            }
            return Ok(x);
        }

        // POST api/<VinylController>
        [HttpPost("addVinyl/{title}/{artist}/{genre}/{value}")]
        public IActionResult AddVinyl(string title, string artist, string genre, decimal value, int? year = null, string? description = null)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var newVinyl = new Vinyl
            {
                Title= title,
                Artist= artist,
                Genre= genre,
                Value= value,
                Year= year,
                Description= description
            };
            _context.Vinyls.Add(newVinyl);
            _context.SaveChanges();
            return Ok(new { Message = "Sikeresen hozzáadtál egy lemezt!" });
        }

        [HttpDelete("{id}")]
        public IActionResult Delete(int id)
        {
            ProjektDbContext _context = new ProjektDbContext();
            var x = (from i in _context.Vinyls where i.VinylId == id select i).FirstOrDefault();
            if (x is null)
            {
                return NotFound();
            }
            _context.Vinyls.Remove(x);
            _context.SaveChanges();
            return Ok();
        }


    }
}

################################ PROGRAM CS kiegészítés A WEBESHEZ ################################

app.UseDefaultFiles();
app.UseStaticFiles();

################################ FORM ################################

namespace WinFormsApp1
{
    public partial class Form1 : Form
    {
        ProjektDbContext _context = new ProjektDbContext();
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (MessageBox.Show("Biztosan bezárod?", "Megerősítés", MessageBoxButtons.YesNo) == DialogResult.No)
            {
                e.Cancel = true;
            }
        }

        private void buttonUser_Click(object sender, EventArgs e)
        {
            UserControlUser userControlUser = new UserControlUser();
            userControlUser.Dock = DockStyle.Fill;
            panel1.Controls.Clear();
            panel1.Controls.Add(userControlUser);
        }

        private void buttonVinyl_Click(object sender, EventArgs e)
        {
            UserControlVinyls userControlVinyls = new UserControlVinyls();
            userControlVinyls.Dock = DockStyle.Fill;
            panel1.Controls.Clear();
            panel1.Controls.Add(userControlVinyls);
        }
    }
}

++++++++++++++++++++
anchor-ok beállítása
++++++++++++++++++++


################################ USERCONTROL USERS ################################

namespace WinFormsApp1
{
    public partial class UserControlUser : UserControl
    {
        ProjektDbContext _context = new ProjektDbContext();
        public UserControlUser()
        {
            InitializeComponent();
            userBindingSource.DataSource = _context.Users.ToList();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            var x = (from i in _context.Users where i.Username.Contains(textBox1.Text) select i).ToList();
            userBindingSource.DataSource = x;
        }
    }
}

################################ USERCONTROL VINYLS ################################

namespace WinFormsApp1
{
    public partial class UserControlVinyls : UserControl
    {
        ProjektDbContext _context = new ProjektDbContext();
        public UserControlVinyls()
        {
            InitializeComponent();
        }

        private void UserControlVinyls_Load(object sender, EventArgs e)
        {
            vinylBindingSource.DataSource = _context.Vinyls.ToList();
        }
    }
}
